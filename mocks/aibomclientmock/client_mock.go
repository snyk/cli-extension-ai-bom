// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/snyk/cli-extension-ai-bom/internal/services/ai-bom-client (interfaces: AiBomClient)
//
// Generated by this command:
//
//	mockgen -package aibomclientmock -destination aibomclientmock/client_mock.go github.com/snyk/cli-extension-ai-bom/internal/services/ai-bom-client AiBomClient
//

// Package aibomclientmock is a generated GoMock package.
package aibomclientmock

import (
	context "context"
	reflect "reflect"

	errors "github.com/snyk/cli-extension-ai-bom/internal/errors"
	gomock "go.uber.org/mock/gomock"
)

// MockAiBomClient is a mock of AiBomClient interface.
type MockAiBomClient struct {
	ctrl     *gomock.Controller
	recorder *MockAiBomClientMockRecorder
	isgomock struct{}
}

// MockAiBomClientMockRecorder is the mock recorder for MockAiBomClient.
type MockAiBomClientMockRecorder struct {
	mock *MockAiBomClient
}

// NewMockAiBomClient creates a new mock instance.
func NewMockAiBomClient(ctrl *gomock.Controller) *MockAiBomClient {
	mock := &MockAiBomClient{ctrl: ctrl}
	mock.recorder = &MockAiBomClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAiBomClient) EXPECT() *MockAiBomClientMockRecorder {
	return m.recorder
}

// CheckAPIAvailability mocks base method.
func (m *MockAiBomClient) CheckAPIAvailability(ctx context.Context, orgID string) *errors.AiBomError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckAPIAvailability", ctx, orgID)
	ret0, _ := ret[0].(*errors.AiBomError)
	return ret0
}

// CheckAPIAvailability indicates an expected call of CheckAPIAvailability.
func (mr *MockAiBomClientMockRecorder) CheckAPIAvailability(ctx, orgID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAPIAvailability", reflect.TypeOf((*MockAiBomClient)(nil).CheckAPIAvailability), ctx, orgID)
}

// GenerateAIBOM mocks base method.
func (m *MockAiBomClient) GenerateAIBOM(ctx context.Context, orgID, bundleHash string) (string, *errors.AiBomError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateAIBOM", ctx, orgID, bundleHash)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*errors.AiBomError)
	return ret0, ret1
}

// GenerateAIBOM indicates an expected call of GenerateAIBOM.
func (mr *MockAiBomClientMockRecorder) GenerateAIBOM(ctx, orgID, bundleHash any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateAIBOM", reflect.TypeOf((*MockAiBomClient)(nil).GenerateAIBOM), ctx, orgID, bundleHash)
}
