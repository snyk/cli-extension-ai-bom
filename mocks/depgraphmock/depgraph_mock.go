// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/snyk/cli-extension-ai-bom/internal/services/depgraph (interfaces: DepgraphService)
//
// Generated by this command:
//
//	mockgen -package depgraphmock -destination depgraphmock/depgraph_mock.go github.com/snyk/cli-extension-ai-bom/internal/services/depgraph DepgraphService
//

// Package depgraphmock is a generated GoMock package.
package depgraphmock

import (
	reflect "reflect"

	depgraph "github.com/snyk/cli-extension-ai-bom/internal/services/depgraph"
	workflow "github.com/snyk/go-application-framework/pkg/workflow"
	gomock "go.uber.org/mock/gomock"
)

// MockDepgraphService is a mock of DepgraphService interface.
type MockDepgraphService struct {
	ctrl     *gomock.Controller
	recorder *MockDepgraphServiceMockRecorder
	isgomock struct{}
}

// MockDepgraphServiceMockRecorder is the mock recorder for MockDepgraphService.
type MockDepgraphServiceMockRecorder struct {
	mock *MockDepgraphService
}

// NewMockDepgraphService creates a new mock instance.
func NewMockDepgraphService(ctrl *gomock.Controller) *MockDepgraphService {
	mock := &MockDepgraphService{ctrl: ctrl}
	mock.recorder = &MockDepgraphServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDepgraphService) EXPECT() *MockDepgraphServiceMockRecorder {
	return m.recorder
}

// GetDepgraph mocks base method.
func (m *MockDepgraphService) GetDepgraph(ictx workflow.InvocationContext) (*depgraph.DepgraphResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDepgraph", ictx)
	ret0, _ := ret[0].(*depgraph.DepgraphResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDepgraph indicates an expected call of GetDepgraph.
func (mr *MockDepgraphServiceMockRecorder) GetDepgraph(ictx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDepgraph", reflect.TypeOf((*MockDepgraphService)(nil).GetDepgraph), ictx)
}
